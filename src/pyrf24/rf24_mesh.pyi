# pylint: skip-file
from typing import Union
from .rf24 import RF24, RF24_1MBPS
from .rf24_network import RF24Network


class RF24Mesh:
    def __init__(self, radio: RF24, network: RF24Network) -> None: ...
    def begin(self, channel: int = 97, data_rate: int = RF24_1MBPS, timeout: int = 7500) -> bool: ...
    def check_connection(self) -> bool: ...
    def dhcp(self) -> None: ...
    def save_dhcp(self) -> None: ...
    def load_dhcp(self) -> None: ...
    def get_address(self, node_id: int) -> int: ...
    def set_address(self, node_id: int, address: int, search_by_address: bool = False) -> None: ...
    def set_node_id(self) -> None: ...
    def get_node_id(self, address: int) -> int: ...
    def release_address(self) -> bool: ...
    def renew_address(self, timeout: int = 7500) -> int: ...
    def set_channel(self, channel: int) -> None: ...
    def set_child(self, allow: bool) -> None: ...
    def update(self) -> int: ...
    def write(self, buf: Union[bytes, bytearray], message_type: int, to_node_id: int = 0) -> bool : ...
    def write(self, to_node: int, buf: Union[bytes, bytearray], message_type: int) -> bool : ...
    
    @property
    def mesh_address(self) -> int: ...
    
    @property
    def node_id(self) -> int: ...

    @node_id.setter
    def node_id(self, number: int) -> None: ...
