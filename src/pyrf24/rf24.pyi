from typing import Tuple


class RF24:
    def __init__(self, _ce_pin: int=0xFFFF, _csn_pin: int=0xFFFF, _spi_speed: int=10000000) -> None: ...
    def begin(_ce_pin: int=None, _csn_pin: int=None) -> bool: ...
    def available_pipe(self) -> Tuple(bool, int): ...
    def available(self) -> bool: ...
    def close_rx_pipe(self, pipe_number: int) -> None: ...
    def disable_crc(self) -> None: ...
    def disable_dynamic_payloads(self) -> None: ...
    def enable_dynamic_payloads(self) -> None: ...
    def enable_ack_payload(self) -> None: ...
    def disable_ack(self) -> None: ...
    def enable_dynamic_ack(self) -> None: ...
    def flush_rx(self) -> None: ...
    def flush_tx(self) -> None: ...
    def get_crc_length(self) -> int: ...
    def set_crc_length(self) -> None: ...
    def get_data_rate(self) -> int: ...
    def set_data_rate(self) -> None: ...
    def get_pa_level(self) -> int: ...
    def set_pa_level(self) -> None: ...
    def get_dynamic_payload_size(self) -> int: ...
    def mask_irq(self, tx_ok: bool, tx_fail: bool, rx_ready:bool) -> None: ...
    def power_down(self) -> None: ...
    def power_up(self) -> None: ...
    def print_details(self) -> None: ...
    def print_pretty_details(self) -> None: ...
    def read(self, length: int) -> bytearray: ...
    def reuse_tx(self) -> None: ...
    def set_address_width(self, width: int) -> None: ...
    def set_retries(self, delay:int, count: int) -> None: ...
    def start_listening(self) -> None: ...
    def stop_listening(self) -> None: ...
    def start_const_carrier(self) -> None: ...
    def stop_const_carrier(self) -> None: ...
    def test_rpd(self) -> bool: ...
    def what_happened(self) -> Tuple(bool, bool, bool): ...

    @property
    def rpd(self) -> bool: ...

    @property
    def rx_fifo_full(self) -> bool: ...

    @property
    def payload_size(self) -> int: ...

    @property
    def power(self) -> bool: ...

    @property
    def listen(self) -> bool: ...

    @property
    def is_plus_variant(self) -> bool: ...

    @property
    def is_valid(self) -> bool: ...

    @property
    def failure_detected(self) -> int: ...

    @property
    def dynamic_payloads(self) -> bool: ...

    @property
    def channel(self) -> int: ...

    @property
    def crc_length(self) -> int: ...

    @property
    def data_rate(self) -> int: ...
